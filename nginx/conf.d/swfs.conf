# https://github.com/seaweedfs/seaweedfs/wiki/S3-Nginx-Proxy

upstream seaweedfs { server seaweedfs:8333 fail_timeout=0; keepalive 20;}

## Also you can use unix domain socket instead for better performance:
# upstream seaweedfs { server unix:/tmp/seaweedfs-s3-8333.sock; keepalive 20;}

server {
  listen 443 ssl;

  # Assumes that your subdomain is s3
  # The regex will support path style as well as virtual-hosted style bucket URLs
  # path style: http://s3.swfs.lndo.site/mybucket
  # virtual-hosted style: http://mybucket.s3.swfs.lndo.site
  server_name ~^(?:(?<bucket>[^.]+)\.)?s3\.swfs\.lndo\.site;

  ignore_invalid_headers off;
  client_max_body_size 0;
  proxy_buffering off;

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $remote_addr;
  proxy_set_header X-Forwarded-Proto $scheme;

  proxy_connect_timeout 300;
  proxy_http_version 1.1;
  proxy_set_header Connection "";
  chunked_transfer_encoding off;

  # If bucket subdomain is not empty,
  # rewrite request to backend.
  if ($bucket != "") {
    rewrite (.*) /$bucket$1 last;
  }

  location / {
    proxy_pass http://seaweedfs;
  }

  ssl_certificate /etc/ssl/swfs.pem;
  ssl_certificate_key /etc/ssl/swfs.key;
}

server {
  listen 443 default_server;

  ssl_certificate /etc/ssl/swfs.pem;
  ssl_certificate_key /etc/ssl/swfs.key;
  
  return 404;
}